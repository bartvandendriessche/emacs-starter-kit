/**
 * Act on comments.
 *
 * Implementation of hook_comment
 *
 * @param $a1 Dependent on the action being performed.
 *   * For "form", passes in the comment form.
 *   * For "validate","update","insert", passes in an array of form
 *     values submitted by the user.
 *   * For all other operations, passes in the comment the action is
 *     being performed on.
 *
 * @param $op What kind of action is being performed. Possible values:
 *
 *    * "insert": The comment is being inserted.
 *    * "update": The comment is being updated.
 *    * "view": The comment is being viewed. This hook can be used to add
        additional data to the comment before theming.
 *    * "form": The comment form is about to be shown. Modules may add
 *       fields to the form at this point.
 *    * "validate": The user has just finished editing the comment and is
 *       trying to preview or submit it. This hook can be used to check
 *       or even modify the node. Errors should be set with
 *       form_set_error().
 *    * "publish": The comment is being published by the moderator.
 *    * "unpublish": The comment is being unpublished by the moderator.
 *    * "delete": The comment is being deleted by the moderator. 
 *
 * @return Dependent on the action being performed.
 *
 *    * For "form", an array of form elements to add to the comment form.
 *    * For all other operations, nothing. 
 *
 */
function ${1:`(sacha/drupal-module-name)`}_comment($a1, $op) {
  switch ($op) {
  case 'insert':
    break;
  case 'update':
    break;
  case 'view': 
    break;
  case 'form':
    $form = array();
    return $form;
    break;
  case 'validate':
    break;
  case 'publish':
    break;
  case 'unpublish':
    break;
  case 'delete':
    break;
  }
}
